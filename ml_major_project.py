# -*- coding: utf-8 -*-
"""ML-Major_Project.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1gvAGOPU07I-TonryWR0unTUe6kpYxTHI

**Machine Learning Major Project**

Topic - Mobile Price Predictions

**Statement**




ABC has started his own mobile company. He wants to give tough fights to big
companies like Apple,Samsung etc. He does not know how to estimate the price of
mobiles his company creates. In this competitive mobile phone market you cannot
simply assume things. To solve this problem he collects sales data of mobile phones
of various companies. This dataset contain information about many mobiles and
variables about it

**Task : Build a model to find out some relation between features of a mobile
phone(eg:- RAM,Internal Memory etc) and its selling price.**
"""

#Importing Libraries
import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

#Loading the dataset to a Pandas DataFrame
df = pd.read_csv('/content/drive/MyDrive/train.csv')

df.shape

df.head()

#Checking for missing values
df.isnull().sum()

#Absolute measures of the data
df.describe()

"""***Data Visualization***

---


"""

correlation = df.corr()

# constructing a heatmap to understand the correlation between the columns
plt.figure(figsize=(10,10))
sns.heatmap(correlation, cbar=True, square=True, cmap='coolwarm_r')

"""So, the price range is proportional to the RAM, px_height, px_width and is somewhat related to the battery_power

RELATED DATA - GRAPH PLOTING
"""

#price_range v/s battery_power
plt.figure(figsize=(5,5))
sns.barplot(x='price_range', y='battery_power', data=df)
plt.show

#price_range v/s px_height
plt.figure(figsize=(5,5))
sns.barplot(x='price_range', y='px_height', data=df)
plt.show

#price_range v/s px_width
plt.figure(figsize=(5,5))
sns.barplot(x='price_range', y='px_width', data=df)
plt.show

#price_range v/s RAM
plt.figure(figsize=(5,5))
sns.barplot(x='price_range', y='ram', data=df)
plt.show

#plotting b/t price_range and memory
plt.figure(figsize=(7,7))
sns.lineplot(x='price_range', y='int_memory', data=df, hue ='dual_sim')
plt.show

"""**DATA PERPROCESSING**"""

x=df.drop(['price_range'], axis=1)
y=df['price_range']

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x,y,test_size=0.25, random_state=0)

"""**Implementation of KNN**"""

from sklearn.neighbors import KNeighborsClassifier
knn=KNeighborsClassifier(n_neighbors=10)
knn.fit(x_train, y_train)

knn.score(x_train, y_train)

predictions = knn.predict(x_test)

from sklearn.metrics import accuracy_score
accuracy_score(y_test, predictions)

"""**Predicting Values for test.csv**"""

test_df = pd.read_csv('/content/drive/MyDrive/test.csv')

test_df.head()

ki test_df.shape

test_df.isnull().sum()

test_df=test_df.drop(['id'], axis=1)

test_df.shape

test_pred = knn.predict(test_df)

test_df['predicted_price']= test_pred

test_df.head